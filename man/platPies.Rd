% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/platPies.R
\name{platPies}
\alias{platPies}
\title{Plot pie charts on a map given the colors relative to each cluster.}
\usage{
platPies(
  df,
  lat = "lat",
  lon = "lon",
  k = "Cluster",
  hex = "HEX.K",
  alpha = 1,
  ...
)
}
\arguments{
\item{df}{data frame. Must contain the relative proportion (values from 0 to 1)
of every sample (row) to each cluster.
For the cluster information, it can be part of the data frame:
in a column with the cluster names (k) and the respective color (hex) OR
as independent vectors that are called into de function.
The columns with the proportion must be named exactly as the factors called in k.
the hex column can be created in df by following the pipeline (see examples)}

\item{lat}{Column name that contains the latitude values. Default "lat".}

\item{lon}{Column name that contains the longitude values. Default "lon".}

\item{k}{Vector or Column name with the names of the clusters (e.g., group, region). Default "Cluster".
If it's part of df, k should be associated with the samples.
If vector, the order of the elements and total length must coincide with k.
The factors or elements in k must be equal as the colnames in the df that contains the proportions.#'}

\item{hex}{Vector or column name that contains the color relative to the cluster. Default "HEX.K".
If vector, the order of the elements and total length must coincide with k.}

\item{alpha}{Transparency level from 0 to 1. Default 1.}

\item{...}{Further options to be passed to rworldmap::mapPies}
}
\value{
A map with pie charts located at each sample given by the lat and lon coordinates provided.
The proportions of each pie chart correspond to the proportion given on
the columns named as the clusters.
The colors correspond to the color assigned to each cluster
}
\description{
When you have several samples that are grouped into clusters,
but every sample does not belong 100% to that group.
Maybe, a percentage of the sample belongs to a group and the other to another or others.
Genetic structure, for example.

This function requires a column (k) with the cluster names and their associated color,
Missing values are allowed. For example, if a sample is 50% "Coast" and 50% "Andes",
in the cluster names column (k).
This function requires as a column per cluster with the proportion of the cluster per sample.
}
\examples{

# Sample data frame without the colors
df <- data.frame(
  lati = c(4.611, 6.251, 3.437, 10.391, 10.963, 7.984722),
  lon = c(-74.083, -75.563, -76.522, -75.514, -74.796, -75.198056),
  # [6] doesn't entirely belong to "Andes" or "Coast" region
  region = c("Andes", "Andes", "Andes", "Coast", "Coast", NA),
  # the following are the proportions.
  # Please not that the column names match the names of the region (cluster)
  Andes = c(1, 1, 1, 0, 0, 0.5),
  Coast = c(0, 0, 0, 1, 1, 0.5)
)
# Get the colors per sample and bind them to df
df <- getColors(df, map = FALSE, lat = "lati")

# Get the average color per region
df <- colorCluster(df, k = "region")
# the resultant df contains the necessary column for platPies: the color per cluster.

# Plot the pie charts on a map
platPies(df = df, lat = "lati", k = "region")


# Sample data frame. Without the cluster names and colors columns (k and hex)
df2 <- data.frame(
  lat = c(4.611, 6.251, 3.437, 10.391, 10.963, 7.984722),
  lon = c(-74.083, -75.563, -76.522, -75.514, -74.796, -75.198056),
  Andes = c(1, 1, 1, 0, 0, 0.5),
  Coast = c(0, 0, 0, 1, 1, 0.5)
)

# Vectors with the information regarding the cluster names and colors
region <- c("Andes", "Coast")
color_region <- c("#8976D2", "#708F0A")

platPies(df = df2, k = region, hex = color_region)


}
